// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)
{
  // "jupyter": {
  //   "kernel_selections": {
  //     "typescript": "oxc"
  //   }
  // },
  "edit_predictions": {
    "mode": "subtle",
    "copilot": {
      "proxy": null,
      "proxy_no_verify": null
    },
    "enabled_in_assistant": false
  },
  "assistant": {
    "default_model": {
      "provider": "ollama",
      "model": "hf.co/NousResearch/Hermes-3-Llama-3.1-8B-GGUF:Q5_K_M"
    },
    "version": "2"
  },
  "features": {
    "edit_prediction_provider": "supermaven"
  },
  "vim_mode": true,
  "ui_font_size": 15,
  "buffer_font_size": 15,
  "ui_font_family": "Hack Nerd Font",
  "buffer_font_family": "Hack Nerd Font",
  "buffer_line_height": "standard",
  // "format_on_save": "on",
  "formatter": {
    "code_actions": {
      "source.fixAll.eslint": true
    }
    // "external": {
    //   "command": "prettier",
    //   "arguments": ["--stdin-filepath", "{buffer_path}"]
    // }
  },
  // NOTE: Zen mode, refer https://github.com/zed-industries/zed/issues/4382 when it's resolved
  "centered_layout": {
    "left_padding": 0.15,
    "right_padding": 0.15
  },
  "cursor_shape": "bar",
  // Uncomment below to use local AI with Ollama, refer https://zed.dev/docs/language-model-integration?highlight=ollama#using-ollama-on-macos
  // "assistant": {
  //   "default_model": {
  //     "provider": "ollama",
  //     "model": "llama3.1:latest"
  //   },
  //   "version": "2",
  //   "provider": null
  // },
  "language_models": {
    "ollama": {
      "api_url": "http://localhost:11434"
    }
  },
  // Inlay hints preconfigured by Zed: Go, Rust, Typescript and Svelte
  // "inlay_hints": {
  //   "enabled": true
  // },
  // LSP
  "lsp": {
    "tailwindcss-language-server": {
      "settings": {
        "classAttributes": ["class", "className", "ngClass", "styles"]
      }
    }
  },
  "languages": {
    // Refer https://zed.dev/docs/languages/javascript and https://zed.dev/docs/languages/typescript for more info
    "TypeScript": {
      // Refer https://github.com/jellydn/ts-inlay-hints for how to setup for Neovim and VSCode
      "inlay_hints": {
        "enabled": true,
        "show_parameter_hints": false,
        "show_other_hints": true,
        "show_type_hints": false
      }
      // "code_actions_on_format": {
      //   "source.fixAll.eslint": true,
      //   "source.organizeImports": true
      // }
      // "language_overrides": {
      //   "TypeScript": {
      //     "format_on_save": {
      //       "external": {
      //         "command": "node_modules/.bin/prettier",
      //         "arguments": ["--stdin-filepath", "{buffer_path}"]
      //       }
      //     }
      //   },
      //   "TSX": {
      //     "format_on_save": {
      //       "external": {
      //         "command": "node_modules/.bin/prettier",
      //         "arguments": ["--stdin-filepath", "{buffer_path}"]
      //       }
      //     }
      //   }
      // }
      // "language_overrides": {
      //   "TypeScript": {
      //     "format_on_save": {
      //       "external": {
      //         "command": "prettier",
      //         "arguments": ["--stdin-filepath", "{buffer_path}"]
      //       }
      //     }
      //   },
      //   "TSX": {
      //     "format_on_save": {
      //       "external": {
      //         "command": "prettier",
      //         "arguments": ["--stdin-filepath", "{buffer_path}"]
      //       }
      //     }
      //   }
      // }
    },
    "Python": {
      "format_on_save": {
        "language_server": {
          "name": "ruff"
        }
      },
      "formatter": {
        "language_server": {
          "name": "ruff"
        }
      },
      "language_servers": ["pyright", "ruff"]
    }
  },
  // Use zed commit editor
  "terminal": {
    "env": {
      "EDITOR": "zed --wait"
    }
  },
  // File syntax highlighting
  "file_types": {
    "Dockerfile": ["Dockerfile", "Dockerfile.*"],
    "JSON": ["json", "jsonc", "*.code-snippets"]
  },
  // File scan exclusions, hide on the file explorer and search
  "file_scan_exclusions": [
    "**/.git",
    "**/.svn",
    "**/.hg",
    "**/CVS",
    "**/.DS_Store",
    "**/Thumbs.db",
    "**/.classpath",
    "**/.settings",
    // above is default from Zed
    "**/out",
    // "**/dist",
    "**/.husky",
    "**/.turbo",
    "**/.vscode-test",
    "**/.vscode",
    "**/.next",
    "**/.storybook",
    "**/.tap",
    "**/.nyc_output",
    "**/report",
    "**/node_modules",
    "!**/.env",
    "!**/.env.json"
  ],
  // Turn off telemetry
  "telemetry": {
    "diagnostics": false,
    "metrics": false
  },
  // Move all panel to the left
  "project_panel": {
    "button": true,
    "dock": "left",
    "git_status": true
  },
  "outline_panel": {
    "dock": "right"
  },
  "collaboration_panel": {
    "dock": "right"
  },
  // Move some unnecessary panels to the right
  "notification_panel": {
    "dock": "right"
  },
  "chat_panel": {
    "dock": "right"
  },
  "private_files": [],
  "vim": {
    "use_multiline_find": true,
    "use_smartcase_find": true,
    "toggle_relative_line_numbers": true,
    "use_system_clipboard": "always"
  },
  "theme": {
    "mode": "system",
    "light": "Catppuccin Latte",
    "dark": "Gruvbox Dark"
  },
  "ssh_connections": [
    {
      "host": "localhost",
      "projects": [
        {
          "paths": ["~/dev/sondage-sportall", "~/dev/sportall"]
        }
      ]
    }
  ]
}
